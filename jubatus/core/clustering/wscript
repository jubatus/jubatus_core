# -*- python -*-
import os;
import re;

def options(opt): pass
def configure(conf):
    pass
def build(bld):
  source = [
    'clustering.cpp',
    'storage.cpp',
    'compressive_storage.cpp',
    'simple_storage.cpp',
    'storage_factory.cpp',
    'kmeans_compressor.cpp',
    'kmeans_clustering_method.cpp',
    'dbscan_clustering_method.cpp',
    'clustering_method_factory.cpp',
    'discrete_distribution.cpp',
    'util.cpp',
    'clustering_factory.cpp'
  ]
  headers = [
    'clustering.hpp',
    'clustering_method_factory.hpp',
    'clustering_method.hpp',
    'compressive_storage.hpp',
    'compressor.hpp',
    'discrete_distribution.hpp',
    'eigen_feature_mapper.hpp',
    'event_dispatcher.hpp',
    'gmm_clustering_method.hpp',
    'gmm_compressor.hpp',
    'gmm.hpp',
    'gmm_types.hpp',
    'kmeans_clustering_method.hpp',
    'dbscan_clustering_method.hpp',
    'kmeans_compressor.hpp',
    'simple_storage.hpp',
    'storage_factory.hpp',
    'storage.hpp',
    'types.hpp',
    'util.hpp',
    'clustering_factory.hpp'
  ]
  if bld.env.USE_EIGEN:
    source += [
      'eigen_feature_mapper.cpp',
      'gmm_compressor.cpp',
      'gmm_clustering_method.cpp',
      'gmm.cpp',
    ]

  use = ['jubatus_util', 'MSGPACK']

  bld.core_sources.extend(bld.add_prefix(source))
  bld.core_headers.extend(bld.add_prefix(headers))
  bld.core_use.extend(use)

  test_cases = [
    'clustering_test.cpp',
    'compressive_storage_test.cpp',
    'mixable_model_test.cpp',
    'model_test.cpp',
    'storage_test.cpp',
    'util_test.cpp',
    'dbscan_test.cpp'
    'dbscan_test.cpp',
    'clustering_factory_test.cpp'
  ]
  if bld.env.USE_EIGEN:
    test_cases += [
      'gmm_test.cpp',
      'model_gmm_test.cpp'
    ]
  for t in test_cases:
    ret = re.compile("^(\w+)_test.cpp$").match(t);
    if ret is not None:
      tname = ret.groups()[0];
      target = "clustering_" + tname + "_test";
      bld.program(
        features="gtest",
        source= [
          t,
        ],
        target=target,
        includes=".",
        use=['jubatus_util', 'jubatus_core'],
      );
